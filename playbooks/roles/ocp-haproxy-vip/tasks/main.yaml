---
# tasks file for service config files for ocp_vip

- name: Create ocp-vip directory under {{ workdir }}
  file: 
    path: "{{ workdir }}/ocp-vip/"
    state: directory

- name: Write out haproxy.cfg.tmpl file
  template:
    src: templates/haproxy.cfg.tmpl.j2
    dest: "{{ workdir }}/ocp-vip/haproxy.cfg.tmpl"

- name: Write out haproxy.yaml file
  template:
    src: templates/haproxy.yaml.j2
    dest: "{{ workdir }}/ocp-vip/haproxy.yaml"

- name: Write out keepalived.conf.tmpl file
  template:
    src: templates/keepalived.conf.tmpl.j2
    dest: "{{ workdir }}/ocp-vip/keepalived.conf.tmpl"

- name: Write out keepalived.yaml file
  template:
    src: templates/keepalived.yaml.j2
    dest: "{{ workdir }}/ocp-vip/keepalived.yaml"

- name: Get release-image.sh from .openshift_install_state.json
  shell: |
    file_content=$(jq  '.["*bootstrap.Bootstrap"].Config.storage.files[] | select(.path | contains("release-image.sh"))'.contents.source .openshift_install_state.json)
    echo ${file_content} | cut -d '"' -f 2 | awk -F"," '{print $2}' | base64 -d > ocp-vip/release-image.sh
  args:
    chdir: "{{ workdir }}"

# - name: Get default release image info from openshift-install
#   shell: release=`/usr/local/bin/openshift-install version | grep "release image" | awk  '{print $3}'`; echo ${release}
#   register: release_image

- name: Write out vip-setup.sh file
  template:
    src: templates/vip-setup.sh.j2
    dest: "{{ workdir }}/ocp-vip/vip-setup.sh"

- name: Copy keepalived and haproxy config files to cluster's master node
  shell: |
    scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ workdir }}/ocp-vip/* core@{{ item }}:.
    cmd="sed -i 's/__IP_ADDR__/{{ item }}/g' vip-setup.sh; chmod +x *.sh; sudo ./vip-setup.sh"
    ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null core@{{ item }} "$cmd"
  with_items: "{{ groups['masters'] }}"

# update named configure fikes to use VIP for *.apps, init-api and api 
- name: Update named's zone file
  shell: |
    sed -i "s|^api		IN	A.*|api		IN	A {{ ocp_haproxy_vip }}|g" /var/named/zonefile.db
    sed -i "s|^api-int		IN	A.*|api-int		IN	A	{{ ocp_haproxy_vip }}|g" /var/named/zonefile.db
    sed -i "s|^\*.apps		IN	A.*|*.apps		IN	A	{{ ocp_haproxy_vip }}|g" /var/named/zonefile.db
    sed -i "s|^.*	IN	PTR	api.{{ dns.clusterid }}.{{ dns.domain | lower }}.|{{ ocp_haproxy_vip.split('.')[3] }}	IN	PTR	api.{{ dns.clusterid }}.{{ dns.domain | lower }}.|g" /var/named/reverse.db
    sed -i "s|^.*	IN	PTR	api-int.{{ dns.clusterid }}.{{ dns.domain | lower }}.|{{ ocp_haproxy_vip.split('.')[3] }}	IN	PTR	api-int.{{ dns.clusterid }}.{{ dns.domain | lower }}.|g" /var/named/reverse.db
  notify:
    - restart bind

